#include <iostream>
#include <vector>
#include <climits>

using namespace std;

vector<int> maxRevenue(int n, const vector<int>& lengths, const vector<int>& prices, int k) {
    vector<vector<int>> revenue(n + 1, vector<int>(k + 1, INT_MIN));  
    vector<vector<int>> cuts(n + 1, vector<int>(k + 1, 0));  
    revenue[0][0] = 0; 
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= k; j++) {
            for (int l = 0; l < i; l++) {
                if (prices[l] + revenue[i - l - 1][j - 1] > revenue[i][j]) {
                    revenue[i][j] = prices[l] + revenue[i - l - 1][j - 1];
                    cuts[i][j] = lengths[l];
                }
            }
        }
    }

    vector<int> result;
    int length = n;
    int numCuts = k;
    while (numCuts > 0) {
        result.push_back(cuts[length][numCuts]);
        length -= cuts[length][numCuts];
        numCuts--;
    }
    result.push_back(revenue[n][k]);
    return result;
}

int main() {
    int cuts;
    
